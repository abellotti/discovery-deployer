apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "discovery.serverFullname" . }}
  labels:
    {{- include "discovery.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "discovery.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  triggers:
    - type: ConfigChange
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "discovery.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      serviceAccountName: {{ include "discovery.globalServiceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "discovery.serverFullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              protocol: TCP
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: "RuntimeDefault"
          livenessProbe:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - 'ps axo command | grep -v grep | grep gunicorn'
              failureThreshold: 3
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
          readinessProbe:
              httpGet:
                path: /api/v1/status/
                port: {{ .Values.service.port }}
                scheme: HTTPS
                httpHeaders:
                  - name: Host
                    value: {{ include "discovery.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
              failureThreshold: 5
              initialDelaySeconds: 10
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /var/data
            name: {{ .Release.Name }}-discovery-data-volume-claim
          - mountPath: /var/log
            name: {{ .Release.Name }}-discovery-log-volume-claim
          env:
            - name: ANSIBLE_REMOTE_TMP
              value: {{ .Values.ansible.remoteTmp }}
            - name: ANSIBLE_LOCAL_TEMP
              value: {{ .Values.ansible.localTemp }}
            - name: ANSIBLE_LOG_LEVEL
              value: {{ .Values.ansible.logLevel | quote }}
            - name: DJANGO_SECRET_PATH
              value: {{ .Values.global.djangoSecretPath }}
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: django-secret-key
                  name: discovery-secrets
            - name: QPC_DBMS
              value: "postgres"
            - name: QPC_DBMS_DATABASE
              value: {{ .Values.discovery_db.postgresql.database }}
            - name: QPC_DBMS_HOST
              value: {{ include "discovery.db-host" . }}
            - name: QPC_DBMS_PASSWORD
              value: {{ .Values.discovery_db.postgresql.password }}
            - name: QPC_DBMS_PORT
              value: {{ .Values.discovery_db.service.port | quote }}
            - name: QPC_DBMS_USER
              value: {{ .Values.discovery_db.postgresql.user }}
            - name: QPC_SERVER_PORT
              value: {{ .Values.service.port | quote }}
            - name: QPC_SERVER_TIMEOUT
              value: {{ .Values.server.timeout | quote }}
            - name: QPC_SERVER_USERNAME
              value: {{ .Values.server.username }}
            - name: QPC_SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: server-password
                  name: discovery-secrets
            - name: NETWORK_CONNECT_JOB_TIMEOUT
              value: {{ .Values.network.connect.job_timeout | quote}}
            - name: NETWORK_INSPECT_JOB_TIMEOUT
              value: {{ .Values.network.inspect.job_timeout | quote}}
            - name: QPC_DEBUGPY
              value: {{ .Values.server.debugpy | quote }}
            - name: QPC_LOG_ALL_ENV_VARS_AT_STARTUP
              value: {{ .Values.server.log.all_env_vars_at_startup | quote }}
            - name: REDIS_HOST
              value: {{ include "discovery.redis-host" . }}
            - name: REDIS_PASSWORD
              value: {{ .Values.global.redisPassword }}
      volumes:
      - name: {{ .Release.Name }}-discovery-data-volume-claim
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-discovery-data-volume-claim
      - name: {{ .Release.Name }}-discovery-log-volume-claim
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-discovery-log-volume-claim
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
